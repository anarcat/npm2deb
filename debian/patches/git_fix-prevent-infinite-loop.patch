commit 1ead94ec07e8cf6c9b39c1b02f2f1c792dd443c5
Author: Leo Iannacone <l3on@ubuntu.com>
Date:   Tue May 6 10:01:29 2014 +0200

    prevent infinite loop when looking recursively for dependencies

diff --git a/npm2deb/helper.py b/npm2deb/helper.py
index af4aab1..20ffade 100644
--- a/npm2deb/helper.py
+++ b/npm2deb/helper.py
@@ -101,7 +101,7 @@ def search_for_reverse_dependencies(module):
     return result
 
 def search_for_dependencies(module, recursive=False,
-        force=False, prefix=u''):
+        force=False, prefix=u'', expanded_dependencies=[]):
     try:
         if not isinstance(module, Npm2Deb):
             dependencies = parseJSON(getstatusoutput('npm view "%s" '
@@ -126,12 +126,13 @@ def search_for_dependencies(module, recursive=False,
         dep_prefix = u'└─' if last_dep else u'├─'
         print_formatted_dependency(u"%s %s (%s)" % (dep_prefix, dep,
             result[dep]['version']), result[dep]['debian'], prefix)
-        if recursive:
+        if recursive and not dep in expanded_dependencies:
+            expanded_dependencies.append(dep)
             if (result[dep]['debian'] and force) or \
                     result[dep]['debian'] is None:
                 new_prefix = "%s%s " % (prefix, u"  " if last_dep else u"│ ")
                 result[dep]['dependencies'] = search_for_dependencies(dep, \
-                    recursive, force, new_prefix)
+                    recursive, force, new_prefix, expanded_dependencies)
         else:
             result[dep]['dependencies'] = None
 
