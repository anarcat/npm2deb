From f496bbfd8398b0ec0e3501780350a626a3271bbe Mon Sep 17 00:00:00 2001
From: Suhail P <psuhailp@gmail.com>
Date: Wed, 2 Nov 2016 08:58:04 +0000
Subject: [PATCH 1/8] automating uscan and uupdate

---
 npm2deb/__init__.py | 19 ++++++++++++++-----
 npm2deb/scripts.py  | 38 +++++++++++++++++++++++++++++---------
 2 files changed, 43 insertions(+), 14 deletions(-)

Index: npm2deb/npm2deb/__init__.py
===================================================================
--- npm2deb.orig/npm2deb/__init__.py
+++ npm2deb/npm2deb/__init__.py
@@ -4,6 +4,7 @@ from dateutil import tz as _tz
 from shutil import rmtree as _rmtree
 from urllib.request import urlopen as _urlopen
 from subprocess import getstatusoutput as _getstatusoutput
+from subprocess import call as _call
 import os as _os
 import re as _re
 
@@ -36,6 +37,7 @@ class Npm2Deb(object):
         self.debian_standards = STANDARDS_VERSION
         self.debian_debhelper = DEBHELPER
         self.noclean = False
+        self.upstream_watch = False
         if args:
             if 'upstream_license' in args and args['upstream_license']:
                 self.upstream_license = args['upstream_license']
@@ -85,6 +87,90 @@ class Npm2Deb(object):
         utils.change_dir('..')
         self.create_itp_bug()
 
+    def initiate_build(self ,saved_path):
+        """
+        Try building deb package after creating required files using start().
+        'uscan', 'uupdate' and 'dpkg-buildpackage' are run if debian/watch is OK.
+        """
+        uscan_info = self.test_uscan()
+        if uscan_info[0] == 0:
+            self.run_uscan()
+
+            for name in _os.listdir('..'):
+                orig_file = _re.search('%s_(\d.*)\.orig\.(?:zip|tgz|tbz|txz|(?:tar\.(?:gz|bz2|xz)))' % self.debian_name, name)
+                if orig_file:
+                    orig_file = orig_file.group(0)
+                    break
+            self.run_uupdate(orig_file)
+
+            new_dir = orig_file[:orig_file.find('.orig')].replace('_','-')
+            utils.change_dir('../%s' % new_dir)
+            self.run_buildpackage()
+            self.edit_changelog()
+
+            debian_path = "%s/%s/debian" % (self.name, new_dir)
+            print ('\nRemember, your new source directory is %s/%s' % (self.name, new_dir))
+
+        else:
+            debian_path = "%s/%s/debian" % (self.name, self.debian_name)
+
+        print("""
+This is not a crystal ball, so please take a look at auto-generated files.\n
+You may want fix first these issues:\n""")
+
+        utils.change_dir(saved_path)
+        _call('/bin/grep --color=auto FIX_ME -r %s/*' % debian_path, shell=True)
+
+        if uscan_info[0] != 0:
+            print ("\nUse uscan to get orig source files. Fix debian/watch and then run\
+                    \n$ uscan --download-current-version\n")
+
+        if self.upstream_watch:
+            print ("""
+*** Warning ***\nUsing fakeupstream to download npm dist tarballs, because upstream
+git repo is missing tags. Its better to ask upstream to tag their releases
+instead of using npm dist tarballs as dist tarballs may contain pre built files
+and may not include tests.""")
+
+    def edit_changelog(self):
+        """
+        This function is to remove extra line '* New upstream release'
+        from debian/changelog
+        """
+        with open('debian/changelog', 'r') as f:
+            data = f.read()
+        f.close()
+
+        data_list = data.split('\n')
+        data_list.pop(3)
+
+        with open('debian/changelog', 'w') as f:
+            f.write('\n'.join(data_list))
+        f.close()
+
+    def run_buildpackage(self):
+        print ("\nBuilding the binary package")
+        _call('dpkg-source -b .', shell=True)
+        _call('dpkg-buildpackage', shell=True)
+        # removing auto generated temporary files
+        _call('fakeroot debian/rules clean', shell=True)
+
+    def run_uupdate(self, tar_file):
+        print ('\nCreating debian source package...')
+        _call('uupdate -b ../%s' % tar_file, shell=True)
+
+    def run_uscan(self):
+        print ('\nDownloading source tarball file using debian/watch file...')
+        _os.system('uscan --download-current-version')
+
+    def test_uscan(self):
+        info = _getstatusoutput('uscan --watchfile "debian/watch" '
+                                    '--package "{}" '
+                                    '--upstream-version 0 --no-download'
+                                    .format(self.debian_name))
+        return info
+
+
     def create_itp_bug(self):
         utils.debug(1, "creating wnpp bug template")
         utils.create_file('%s_itp.mail' % self.debian_name, self.get_ITP())
@@ -118,14 +204,13 @@ class Npm2Deb(object):
 
             utils.create_debian_file('watch', content)
             # test watch with uscan, raise exception if status is not 0
-            info = _getstatusoutput('uscan --watchfile "debian/watch" '
-                                    '--package "{}" '
-                                    '--upstream-version 0 --no-download'
-                                    .format(self.debian_name))
-            if info[0] != 0:
+            uscan_info = self.test_uscan()
+
+            if uscan_info[0] != 0:
                 raise ValueError
 
         except ValueError:
+            self.upstream_watch = True
             content = utils.get_watch('fakeupstream') % args
             utils.create_debian_file('watch', content)
 
@@ -330,6 +415,7 @@ class Npm2Deb(object):
         self._get_json_version()
         self._get_json_license()
 
+
     def download(self):
         utils.debug(1, "downloading %s via npm" % self.name)
         info = _getstatusoutput('npm install "%s"' % self.name)
Index: npm2deb/npm2deb/scripts.py
===================================================================
--- npm2deb.orig/npm2deb/scripts.py
+++ npm2deb/npm2deb/scripts.py
@@ -274,20 +274,13 @@ def create(args):
         _utils.create_dir(npm2deb.name)
         _utils.change_dir(npm2deb.name)
         npm2deb.start()
-        _utils.change_dir(saved_path)
+        _utils.change_dir(npm2deb.debian_name)
+        npm2deb.initiate_build(saved_path)
+
     except OSError as os_error:
         print(str(os_error))
         exit(1)
 
-    debian_path = "%s/%s/debian" % (npm2deb.name, npm2deb.debian_name)
-
-    print("""
-This is not a crystal ball, so please take a look at auto-generated files.\n
-You may want fix first these issues:\n""")
-    _call('/bin/grep --color=auto FIX_ME -r %s/*' % debian_path, shell=True)
-    print ("\nUse uscan to get orig source files. Fix debian/watch and then run\
-            \n$ uscan --download-current-version\n")
-
     _show_mapper_warnings()
 
 
