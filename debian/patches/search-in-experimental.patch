--- a/npm2deb/helper.py
+++ b/npm2deb/helper.py
@@ -8,6 +8,7 @@
 from npm2deb import Npm2Deb as _Npm2Deb
 from npm2deb.utils import debug as _debug, debianize_name as _debianize_name
 from npm2deb.mapper import Mapper as _Mapper
+from npm2deb.utils import get_package_in_new as _get_package_in_new
 
 
 DO_PRINT = False
@@ -28,6 +29,7 @@
     found = False
     result = {}
     my_print("Looking for existing repositories:")
+    
     for repo in repositories:
         _debug(1, "search for %s in %s" % (module, repo))
         url_base = "http://anonscm.debian.org/gitweb"
@@ -178,3 +180,5 @@
 def print_formatted_dependency(npm, debian, prefix=u''):
     formatted = u"{0:50}{1}"
     my_print(formatted.format(u"%s%s" % (prefix, npm), debian))
+
+
--- a/npm2deb/mapper.py
+++ b/npm2deb/mapper.py
@@ -6,7 +6,7 @@
 
 from npm2deb.utils import debug as _debug
 from npm2deb.utils import debianize_name as _debianize_name
-
+from npm2deb.utils import get_package_in_new as _get_package_in_new
 
 DB_URL = 'https://wiki.debian.org/Javascript/Nodejs/Database'
 
@@ -71,8 +71,15 @@
             'rmadison -u debian "%s" | grep source' % result['name'])
 
         if madison[0] != 0:
-            result['name'] = None
-            return result
+            # checking if package is listed in NEW
+            in_new = _get_package_in_new(node_module)
+            if not in_new:
+                # Looking for package in debian experimental
+                madison = _getstatusoutput(["rmadison -u debian "\
+                                        + result['name']])
+                if madison[0] != 0:
+                    result['name'] = None
+                    return result
 
         tmp = madison[1].split('|')
         if len(tmp) >= 2:
